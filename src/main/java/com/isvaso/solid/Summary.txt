About SOLID.

1. Single Responsibility Principle
   - A class should only have one reason to change
   - Separation of concerns â€“ different classes handling different, independent tasks/problems

2. Open-Closed Principle
   - Classes should be open for extension but closed for modification

3. Liskov Substitution Principle
   - You should be able to substitute ea base type for a subtype

4. Interface Segregation Principle
   - Don't too much into an an interface; split into separate interfaces
   - YAGNI - You Ain't Going to Need It

5. Dependency Inversion Principle
   - High-level modules should not depend upon low-level ones; use abstractions